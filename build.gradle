plugins {
    id 'java'
    id "io.freefair.lombok" version "5.2.1"
}

group 'Ind'
version '1.0-SNAPSHOT'


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: '/home/kamel/Code/java/chelper/lib', includes: ['*.jar'])
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.0'
    compile 'com.google.guava:guava:28.1-jre'
    compile 'com.fasterxml.jackson.core:jackson-core:2.10.0'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.10.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.10.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.mockito:mockito-core:2.+"
}

task execute(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = project.hasProperty("mainClass") ? project.getProperty("mainClass") : "package.MyDefaultMain"
    standardInput = System.in
    // gradle -q -PmainClass=codejam.qualitification1A.pascalwalk.Solution execute < /home/kamel/Code/java/LeetCode/data/gcj2020/q1a/pascalwalk/input.txt | tee /home/kamel/Code/java/LeetCode/data/gcj2020/q1a/pascalwalk/output.txt
}

task atcoder() {
    def contest =  project.hasProperty("contest") ? project.getProperty("contest") : "default"
    def template = "src/main/java/atcoder/Main.java"
    def contestPath = "src/main/java/atcoder"
    doLast {
        for (item in ["a", "b", "c", "d", "e", "f"]) {
            def problemPath = "${contestPath}/abc${contest}/${item}"
            println(problemPath)
            println(template)
            mkdir(problemPath)
            copy {
                from template
                into problemPath
            }
        }
    }
}